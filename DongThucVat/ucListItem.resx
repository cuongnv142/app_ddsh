<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLoai.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>